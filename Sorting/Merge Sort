void merge(int arr[], int left[], int right[])
    {
       int i =0;
       int j = 0;
       int k =0;
       while(i < left.length && j<right.length){
           if(left[i] <= right[j]){
               arr[k] = left[i];
               i++;
           }
           else{
               arr[k] = right[j];
               j++;
           }
           k++;
       }
       while(i < left.length){
           arr[k] = left[i];
           i++;
           k++;
       }
       while(j < right.length){
           arr[k] = right[j];
           j++;
           k++;
       }
    }
    void mergeSort(int arr[])
    {
        int length = arr.length;
        int mid = length/2;
        if(length < 2)
            return;
        int left[] = new int[mid];
        int right[] = new int[length - mid];
        
        for(int i =0; i < left.length; i++){
            left[i] = arr[i];
        }
        
        for(int j = 0; j < right.length ; j++){
            right[j] = arr[mid + j];
        }
        
        mergeSort(left,0,0);
        mergeSort(right,0,0);
        
        merge(arr,left,right);
         
    }
